{"version":3,"sources":["components/Header.js","components/ListButtons.js","components/ListInput.js","components/ListHeader.js","components/CardButtons.js","components/CardTag.js","components/Card.js","components/ListCard.js","components/ListFooter.js","components/List.js","components/ListNew.js","components/Board.js","services/fetch.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","type","title","ListButtons","props","id","idList","onClick","ev","console","log","currentTarget","handleListDelete","name","handleListLeft","handleListRight","ListInput","placeholder","value","onChange","data","inputValue","target","handleListInput","ListHeader","CardButtons","CardTag","tag","Card","tags","cardData","map","item","i","key","ListCard","ListFooter","handleNewCard","List","cards","itemList","ListNew","handleListNew","Board","lists","fetch","then","response","json","board","list","App","useState","setLists","useEffect","api","newList","push","parseInt","description","Array","returnNewCard","delList","splice","currentList","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.259382ac.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/Header.scss';\r\n\r\nfunction Header() {\r\n  return (\r\n<header className=\"app-header bg-primary mb-3 d-flex justify-content-between align-items-center shadow\">\r\n  <h1 className=\"app-header-title h3 text-white pl-3 pt-1 mr-4 font-weight-light\">\r\n    Gestor de proyectos\r\n  </h1>\r\n  <form className=\"app-header-form p-2 d-flex justify-content-end\">\r\n    <div className=\"app-header-input input-group input-group-sm mr-2\">\r\n      <div className=\"input-group-prepend\">\r\n        <span className=\"input-group-text bg-white border-right-0 text-primary\">\r\n          <span className=\"fas fa-search\"></span>\r\n        </span>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        className=\"app-header-search form-control border-left-0\"\r\n        title=\"Filtrar las tareas\"\r\n      />\r\n    </div>\r\n    <button\r\n      type=\"button\"\r\n      className=\"js-menu-btn btn btn-primary btn-sm text-white-50\"\r\n      title=\"Abrir el menú\"\r\n    >\r\n      <span className=\"fas fa-columns\"></span>\r\n    </button>\r\n  </form>\r\n</header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '../styles/List.scss';\r\n\r\nfunction ListButtons(props) {\r\n  const handleListDelete = (ev) => {\r\n    console.log(ev.currentTarget.id)\r\n    props.handleListDelete(ev.currentTarget.id)   \r\n  }\r\n  const handleListRight = (ev) => {\r\n    console.log(ev.currentTarget.name);\r\n    props.handleListRight(ev.currentTarget.name)    \r\n  }\r\n  const handleListLeft = (ev) => {\r\n    console.log(ev.currentTarget.name);\r\n    props.handleListLeft(ev.currentTarget.name)    \r\n  }\r\n  return (\r\n    <div className=\"app-list-options\">\r\n      <span className=\"pl-2 pr-2 text-white-50 fas fa-ellipsis-v\"></span>\r\n  \r\n      <div className=\"app-list-btns btn-group btn-group-sm\">\r\n        <button\r\n          id = {props.idList}\r\n          type=\"button\"\r\n          className=\"btn btn-light text-muted border shadow-sm\"\r\n          title=\"Borrar esta tarjeta\"\r\n          onClick = {handleListDelete}\r\n        >\r\n          <span className=\"fas fa-trash-alt\"></span>\r\n        </button>\r\n        <button\r\n          name = {props.idList}\r\n          type=\"button\"\r\n          className=\"btn btn-light text-muted border shadow-sm app-list-move-left\"\r\n          title=\"Mover esta lista hacia la izquierda\"\r\n          onClick = {handleListLeft}\r\n        >\r\n          <span className=\"fas fa-arrow-left\"></span>\r\n        </button>\r\n        <button\r\n          name = {props.idList}\r\n          type=\"button\"\r\n          className=\"btn btn-light text-muted border shadow-sm app-list-move-right\"\r\n          title=\"Mover esta lista hacia la derecha\"\r\n          onClick = {handleListRight}\r\n        >\r\n          <span className=\"fas fa-arrow-right\"></span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListButtons;","import React from 'react';\r\nimport '../styles/List.scss';\r\n\r\nfunction ListInput(props) {\r\n  \r\n  const handleInput = (ev) => {\r\n  const data = {\r\n      inputValue: ev.target.value,\r\n      idList: ev.target.id\r\n    }\r\n    console.log(data);\r\n    props.handleListInput(data)\r\n  }\r\n  return (\r\n  <input\r\n  id= {props.idList} \r\n  className=\"app-list-input form-control form-control-sm\" \r\n  placeholder=\"Tareas importantes\" \r\n  type=\"text\" \r\n  value={props.title} \r\n  title=\"Editar el título de la lista\" \r\n  onChange = {handleInput} />\r\n  )\r\n}\r\n\r\nexport default ListInput;\r\n","import React from 'react';\r\nimport '../styles/List.scss';\r\nimport ListButtons from './ListButtons';\r\nimport ListInput from './ListInput';\r\n\r\nfunction ListHeader(props) {\r\n  // console.log(props);\r\n\r\n  return (\r\n    <form className=\"app-list-form align-middle p-1 position-relative\">\r\n      <ListInput  title={props.title} idList = {props.idList} handleListInput={props.handleListInput}/>\r\n      <ListButtons idList = {props.idList} handleListDelete = {props.handleListDelete} handleListRight = {props.handleListRight} handleListLeft = {props.handleListLeft} />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ListHeader;\r\n","import React from 'react';\r\nimport '../styles/List.scss';\r\n\r\nfunction CardButtons() {\r\n  return (\r\n    <div className=\"app-card-btns btn-group-vertical btn-group-sm\">\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn btn-light text-muted border shadow-sm app-card-move-up\"\r\n      title=\"Mover esta tarjeta hacia abajo\"\r\n    >\r\n      <span className=\"fas fa-arrow-up\"></span>\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn btn-light text-muted border shadow-sm app-card-move-down\"\r\n      title=\"Mover esta tarjeta hacia arriba\"\r\n    >\r\n      <span className=\"fas fa-arrow-down\"></span>\r\n    </button>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default CardButtons;","import React from 'react';\r\nimport '../styles/Card.scss';\r\n\r\nfunction CardTag(props) {\r\n  return (\r\n    <>\r\n      <span className=\"badge badge-secondary bg-success\">{props.tag}</span>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardTag;\r\n","import React from 'react';\r\nimport '../styles/Card.scss';\r\nimport CardButtons from './CardButtons';\r\nimport CardTag from './CardTag';\r\n\r\nfunction Card(props) {\r\n  // console.log(props.cardData.tags);\r\n  const tag = props.cardData.tags;\r\n  const tags = tag.map((item, i) => <CardTag key={i} tag={item} />);\r\n  return (\r\n    <article className=\"js-card app-card m-1 mb-2 p-2 bg-white rounded-sm app-cursor-pointer shadow-sm\" title=\"Abrir la tarjeta\">\r\n      {tags}\r\n      <div>\r\n        <h3 className=\"h6\">{props.cardData.title}</h3>\r\n      </div>\r\n\r\n      <div className=\"text-black-50\">\r\n        <small className=\"pr-2 fas fa-align-left\"></small>\r\n        <small className=\"far fa-check-square\"></small>\r\n        <small title=\"Subtareas completadas: 3 de 5\">3/5</small>\r\n      </div>\r\n      <CardButtons />\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport '../styles/List.scss';\r\nimport Card from './Card'\r\n\r\nfunction ListCard(props) {\r\n  \r\n  return (\r\n      <>\r\n      <Card cardData = {props.cardData}/>\r\n      </>\r\n\r\n  );\r\n}\r\n\r\nexport default ListCard;","import React from 'react';\r\nimport '../styles/List.scss';\r\n\r\nfunction ListFooter(props) {\r\n  // console.log(props.idList);\r\n\r\n  const handleNewCard = (ev) => {\r\n    props.handleNewCard(ev.currentTarget.id);\r\n  };\r\n\r\n  return (\r\n    <button id={props.idList} type=\"button\" className=\"ml-1 btn btn-primary btn-sm text-white-50\" title=\"Añadir una nueva tarjeta\" onClick={handleNewCard}>\r\n      <span className=\"fas fa-plus\"></span>\r\n      Añadir otra tarjeta\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ListFooter;\r\n","import React from 'react';\r\nimport '../styles/List.scss';\r\nimport ListHeader from './ListHeader';\r\nimport ListCard from './ListCard';\r\nimport ListFooter from './ListFooter';\r\n\r\nfunction List(props) {\r\n  // console.log(props.itemList.title); \r\n  \r\n  const card = props.itemList.cards;\r\n  const cards = card.map(item => <ListCard key = {item.id} cardData = {item} />)\r\n\r\n  return (\r\n    <div className=\"app-list\">\r\n      <div className=\"p-1 rounded-sm bg-primary shadow\">\r\n        <ListHeader idList = {props.itemList.id} title = {props.itemList.title} handleListInput={props.handleListInput} handleListDelete = {props.handleListDelete} handleListRight = {props.handleListRight} handleListLeft = {props.handleListLeft} />\r\n        {cards}\r\n        <ListFooter idList = {props.itemList.id} handleNewCard = {props.handleNewCard} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport '../styles/App.scss';\r\n\r\nfunction ListNew(props) {\r\n  const handleListNew = (ev) => {\r\n    props.handleListNew()   \r\n  } \r\n\r\n  return (\r\n<div>\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn btn-light btn-outline-primary btn-sm mr-5 shadow-sm\"\r\n      title=\"Añadir una nueva lista\"\r\n      onClick= {handleListNew}\r\n    >\r\n      <span className=\"fas fa-plus\"></span>\r\n    </button>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default ListNew;","import React from 'react';\r\nimport '../styles/App.scss';\r\nimport List from './List';\r\nimport ListNew from './ListNew';\r\n\r\nfunction Board(props) {\r\n  // console.log(props.titleLists);\r\n  \r\n  const list = props.lists;\r\n  const lists = list\r\n  .map((item, i) => <List key={i} itemList={item} cards = {props.cards} handleListInput={props.handleListInput} handleNewCard = {props.handleNewCard} handleListDelete = {props.handleListDelete} handleListRight = {props.handleListRight} handleListLeft = {props.handleListLeft}/>)\r\n\r\n  return (\r\n    <main className=\"app-board d-flex flex-nowrap\">\r\n      {lists}\r\n      <ListNew handleListNew = {props.handleListNew} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","const getDataFromJson = () => \r\n fetch('./api/board.json')\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      let lists = [];\r\n      lists = data.board.list\r\n      return lists;    \r\n    });\r\n\r\nexport default { getDataFromJson };\r\n","import React, { useEffect, useState } from 'react';\nimport '../styles/App.scss';\nimport Header from './Header';\nimport Board from './Board';\nimport api from '../services/fetch';\n\nfunction App() {\n  const [lists, setLists] = useState([]);\n\n  useEffect(() => {\n    api.getDataFromJson().then((data) => {\n      setLists(data);\n    });\n  }, []);\n\n  const handleListInput = (data) => {\n    console.log(data);\n    const list = [...lists];\n    // console.log(list[data.idList]);\n    list[data.idList].title = data.inputValue;\n    setLists(list);\n  };\n\n  const handleListNew = () => {\n    // debugger;\n    console.log('me piden añadir una lista');\n    const newList = [...lists];\n    newList.push({ title: '', cards: [] });\n    setLists(newList);\n  };\n  lists.map((item, i) => (item.id = i));\n\n  const handleListDelete = (id) => {\n    console.log('me piden eliminar esta lista: ', id);\n    const delList = [...lists];\n    delList.splice(id, 1);\n    setLists(delList);\n  };\n\n  const handleListRight = (id) => {\n    console.log('me piden mover esta lista a la derecha: ', id);\n    const currentList = [...lists];\n    const delList = currentList.splice(id, 1);\n    // console.log(delList, currentList);\n    currentList.splice(parseInt(id) + 1, 0, delList[0]);\n    setLists(currentList);\n  };\n\n  const handleListLeft = (id) => {\n    console.log('me piden mover esta lista a la derecha: ', id);\n    const currentList = [...lists];\n    const delList = currentList.splice(id, 1);\n    // console.log(delList, currentList);\n    currentList.splice(parseInt(id) - 1, 0, delList[0]);\n    setLists(currentList);\n  };\n\n  const handleNewCard = (id) => {\n    console.log('me piden añadir una tarjeta de la lista: ', id);\n\n    const returnNewCard = () => {\n      // debugger;\n      for (const item of lists) {\n        console.log(item.cards);\n        if (item.id === parseInt(id)) {\n          item.cards.push({ id: '', title: '', description: '', tags: Array(0) });\n        }\n      }\n      return setLists(lists);\n    };\n    returnNewCard();\n  };\n  // console.log(lists);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Board lists={lists} handleListInput={handleListInput} handleListNew={handleListNew} handleNewCard={handleNewCard} handleListDelete={handleListDelete} handleListRight={handleListRight} handleListLeft={handleListLeft} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}